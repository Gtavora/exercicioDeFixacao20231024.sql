DELIMITER //
CREATE TRIGGER After_Insert_Clientes
AFTER INSERT ON Clientes
FOR EACH ROW
BEGIN
    INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Cliente inserido em ', NWO()));
END;
//
DELIMITER ;
DELIMITER //
CREATE TRIGGER Before_Delete_Clientes
BEFORE DELETE ON Clientes
FOR EACH ROW
BEGIN
    INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Cliente excluído com sucesso ', NOW()));
END;
//
DELIMITER ;
DELIMITER //
CREATE TRIGGER After_Update_Clientes
AFTER UPDATE ON Clientes
FOR EACH ROW
BEGIN
    INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Nome do cliente atualizado de "', OLD.name, '" para "', NEW.name, '" em ', NOW()));
END;
//
DELIMITER ;
DELIMITER //
CREATE TRIGGER Prevent_Update_Empty_Name
BEFORE UPDATE ON Clientes
FOR EACH ROW
BEGIN
    IF NEW.nome = NULL OR NEW.nome = '' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Nome não pode ser atualizado para NULL ou uma string vazia.';
    END IF;
END;
//
DELIMITER ;
ELIMITER //
CREATE TRIGGER Update_Estoque_Pedidos
AFTER INSERT ON Pedidos
FOR EACH ROW
BEGIN
    UPDATE Produtos
    SET estoque = estoque - NEW.quantidade;
    
    IF (SELECT estoque FROM Produtos WHERE id = NEW.product_id) < 5 THEN
        INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Estoque abaixo de 5 unidades para o produto ', NEW.product_id, ' em ', NOW()));
    END IF;
END;
//
DELIMITER ;
